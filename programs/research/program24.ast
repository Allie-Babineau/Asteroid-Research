load system io.
load system math.

function calculateDivisors with (A:%integer, B:%integer) do
  let N = A - B.
  let noOfDivisors = 0.
  let a = math@sqrt(N).

  for i in range(1, (a+1):%integer) do
    if math@mod(N,i) == 0 do
      if i > B do
        let noOfDivisors = noOfDivisors + 1.
      if ((N/i) is not i and (N/i) > B) do
        let noOfDivisors = noOfDivisors + 1.
  end

  return noOfDivisors.
end

function numberOfPossibleWaysUtil with (A:%integer, B:%integer) do
  if A == B do
    return -1.
  if A < B do
    return 0.

  let noOfDivisors = 0.
  let noOfDivisors = calculateDivisors(A,B).
  let return noOfDivisors.
end

function numberOfPossibleWays with (A:%integer, B:%integer) do
  let noOfSolutions = numberOfPossibleWaysUtil(A, B).
  if noOfSolutions == -1 do
    io@ println ("For A = " + A + "and B = " + B + ", X can take Infinitely many values greater than" + A).
  else do
    io@ println ("For A = " + A + "and B = " + B + ", X can take " + noOfSolutions + " values").
end

let A = 26.
let B = 2.
numberOfPossibleWays(A, B).

let A = 21.
let B = 5.
numberOfPossibleWays(A, B).
end
end
end
end
end
end